"use strict";

var Backbone           = require("backbone"),
    _                  = require("lodash"),
    TriangleCrossModel = require("./TriangleCross"),
    Buffer             = require("../lib/Buffer");

module.exports = function () {
    return TriangleCrossModel.extend({
        TILE_WIDTH:  36,
        TILE_HEIGHT: 36,

        getColors: function (data, x, y) {
            var colors = [];

            colors[1] = Buffer.COLORS.BLACK;

            colors[2] = this.getPixelXY(
                data,
                x - 1,
                y
            );

            colors[3] = this.getPixelXY(
                data,
                x + this.TILE_WIDTH - 1,
                y
            );

            colors[4] = this.getPixelXY(
                data,
                x - 1,
                y + this.TILE_HEIGHT - 1
            );

            colors[5] = this.getPixelXY(
                data,
                x + this.TILE_WIDTH - 1,
                y + this.TILE_HEIGHT - 1
            );

            colors[6] = this.getPixelXY(
                data,
                x - 1,
                y + 4
            );

            colors[7] = this.getPixelXY(
                data,
                x + this.TILE_WIDTH - 1,
                y + 4
            );

            colors[8] = this.getPixelXY(
                data,
                x - 1,
                y + this.TILE_HEIGHT - 1 - 4
            );

            colors[9] = this.getPixelXY(
                data,
                x,
                y + Math.floor((this.TILE_HEIGHT - 1) / 2)
            );

            colors[10] = this.getPixelXY(
                data,
                x - 1,
                y + 12
            );

            colors[11] = this.getPixelXY(
                data,
                x + this.TILE_WIDTH - 1,
                y + 12
            );

            colors[12] = this.getPixelXY(
                data,
                x - 1,
                y + this.TILE_HEIGHT - 1 - 12
            );

            colors[13] = this.getPixelXY(
                data,
                x + this.TILE_WIDTH - 1,
                y + this.TILE_HEIGHT - 1 - 12
            );

            colors[14] = this.getPixelXY(
                data,
                x + this.TILE_WIDTH - 1,
                y + this.TILE_HEIGHT - 1 - 4
            );

            colors[15] = this.getPixelXY(
                data,
                x + 7,
                y + 7
            );

            colors[16] = this.getPixelXY(
                data,
                x + this.TILE_WIDTH - 1 - 7,
                y + 7
            );

            colors[17] = this.getPixelXY(
                data,
                x + 7,
                y + this.TILE_HEIGHT - 1 - 7
            );

            colors[18] = this.getPixelXY(
                data,
                x + this.TILE_WIDTH - 1 - 7,
                y + this.TILE_HEIGHT - 1 - 7
            );

            var f = 0.25;

            colors[19] = Buffer.mixColors(colors[6], Buffer.COLORS.BLACK, f);
            colors[20] = Buffer.mixColors(colors[8], Buffer.COLORS.BLACK, f);
            colors[21] = Buffer.mixColors(colors[7], Buffer.COLORS.BLACK, f);
            colors[22] = Buffer.mixColors(colors[14], Buffer.COLORS.BLACK, f);

            colors[23] = Buffer.mixColors(colors[9], Buffer.COLORS.BLACK, f);

            colors[24] = colors[9];

            colors[25] = this.getPixelXY(
                data,
                x + Math.floor((this.TILE_WIDTH - 1) / 2),
                y + Math.floor((this.TILE_HEIGHT - 1) / 2)
            );

            colors[26] = Buffer.mixColors(colors[9], Buffer.COLORS.WHITE, f);

            colors[27] = Buffer.mixColors(colors[6], Buffer.COLORS.WHITE, f);
            colors[28] = Buffer.mixColors(colors[8], Buffer.COLORS.WHITE, f);
            colors[29] = Buffer.mixColors(colors[7], Buffer.COLORS.WHITE, f);
            colors[30] = Buffer.mixColors(colors[14], Buffer.COLORS.WHITE, f);

            return colors;
        },

        //@formatter:off
        pattern:   [
            [ 2, 1,19,27, 6, 1, 2, 2, 2, 1,10,10,10,10, 1,24,26,26,26,26,24, 1,11,11,11,11, 1, 3, 3, 3, 1, 7,29,21, 1, 3],
            [ 1, 1,19,27, 6, 1,15,15,15, 1,10,10,10,10, 1,24,26,26,26,26,24, 1,11,11,11,11, 1,16,16,16, 1, 7,29,21, 1, 1],
            [19,19,19,27, 6, 1,15,15,15, 1,10,10,10,10, 1,24,26,26,26,26,24, 1,11,11,11,11, 1,16,16,16, 1, 7,29,21,21,21],
            [27,27,27,27, 6, 1,15,15,15, 1,10,10,10,10, 1,24,26,26,26,26,24, 1,11,11,11,11, 1,16,16,16, 1, 7,29,29,29,29],
            [ 6, 6, 6, 6, 6, 1,15,15,15, 1,10,10,10,10, 1,24,26,26,26,26,24, 1,11,11,11,11, 1,16,16,16, 1, 7, 7, 7, 7, 7],
            [ 1, 1, 1, 1, 1,15,15,15,15, 1,10,10,10,10, 1,24,26,26,26,26,24, 1,11,11,11,11, 1,16,16,16,16, 1, 1, 1, 1, 1],
            [ 2,15,15,15,15,15,15,15, 1,10,10,10,10,10, 1,24,26,26,26,26,24, 1,11,11,11,11,11, 1,16,16,16,16,16,16,16, 3],
            [ 2,15,15,15,15,15,15, 1,10,10,10,10,10,10, 1,23, 9, 9, 9, 9,23, 1,11,11,11,11,11,11, 1,16,16,16,16,16,16, 3],
            [ 2,15,15,15,15,15, 1,10,10,10,10,10,10, 1,23, 9, 9, 9, 9, 9, 9,23, 1,11,11,11,11,11,11, 1,16,16,16,16,16, 3],
            [ 1, 1, 1, 1, 1, 1,10,10,10,10,10,10, 1,23, 9, 9, 9, 9, 9, 9, 9, 9,23, 1,11,11,11,11,11,11, 1, 1, 1, 1, 1, 1],
            [10,10,10,10,10,10,10,10,10,10,10, 1,23, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,23, 1,11,11,11,11,11,11,11,11,11,11,11],
            [10,10,10,10,10,10,10,10,10,10, 1,23, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,23, 1,11,11,11,11,11,11,11,11,11,11],
            [10,10,10,10,10,10,10,10,10, 1,23, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,23, 1,11,11,11,11,11,11,11,11,11],
            [10,10,10,10,10,10,10,10, 1,23, 9, 9, 9, 9,23,23,23,23,23,23,23,23, 9, 9, 9, 9,23, 1,11,11,11,11,11,11,11,11],
            [ 1, 1, 1, 1, 1, 1, 1, 1,23, 9, 9, 9, 9,23,26,26,26,26,26,26,26,26,23, 9, 9, 9, 9,23, 1, 1, 1, 1, 1, 1, 1, 1],
            [24,24,24,24,24,24,24,23, 9, 9, 9, 9, 9,23,26,23,23,23,23,23,23,26,23, 9, 9, 9, 9, 9,23,24,24,24,24,24,24,24],
            [26,26,26,26,26,26,26, 9, 9, 9, 9, 9, 9,23,26,23,25,25,25,25,23,26,23, 9, 9, 9, 9, 9, 9,26,26,26,26,26,26,26],
            [26,26,26,26,26,26,26, 9, 9, 9, 9, 9, 9,23,26,23,25,25,25,25,23,26,23, 9, 9, 9, 9, 9, 9,26,26,26,26,26,26,26],
            [26,26,26,26,26,26,26, 9, 9, 9, 9, 9, 9,23,26,23,25,25,25,25,23,26,23, 9, 9, 9, 9, 9, 9,26,26,26,26,26,26,26],
            [26,26,26,26,26,26,26, 9, 9, 9, 9, 9, 9,23,26,23,25,25,25,25,23,26,23, 9, 9, 9, 9, 9, 9,26,26,26,26,26,26,26],
            [24,24,24,24,24,24,24,23, 9, 9, 9, 9, 9,23,26,23,23,23,23,23,23,26,23, 9, 9, 9, 9, 9,23,24,24,24,24,24,24,24],
            [ 1, 1, 1, 1, 1, 1, 1, 1,23, 9, 9, 9, 9,23,26,26,26,26,26,26,26,26,23, 9, 9, 9, 9,23, 1, 1, 1, 1, 1, 1, 1, 1],
            [12,12,12,12,12,12,12,12, 1,23, 9, 9, 9, 9,23,23,23,23,23,23,23,23, 9, 9, 9, 9,23, 1,13,13,13,13,13,13,13,13],
            [12,12,12,12,12,12,12,12,12, 1,23, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,23, 1,13,13,13,13,13,13,13,13,13],
            [12,12,12,12,12,12,12,12,12,12, 1,23, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,23, 1,13,13,13,13,13,13,13,13,13,13],
            [12,12,12,12,12,12,12,12,12,12,12, 1,23, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,23, 1,13,13,13,13,13,13,13,13,13,13,13],
            [ 1, 1, 1, 1, 1, 1,12,12,12,12,12,12, 1,23, 9, 9, 9, 9, 9, 9, 9, 9,23, 1,13,13,13,13,13,13, 1, 1, 1, 1, 1, 1],
            [ 4,17,17,17,17,17, 1,12,12,12,12,12,12, 1,23, 9, 9, 9, 9, 9, 9,23, 1,13,13,13,13,13,13, 1,18,18,18,18,18, 5],
            [ 4,17,17,17,17,17,17, 1,12,12,12,12,12,12, 1,23, 9, 9, 9, 9,23, 1,13,13,13,13,13,13, 1,18,18,18,18,18,18, 5],
            [ 4,17,17,17,17,17,17,17, 1,12,12,12,12,12, 1,24,26,26,26,26,24, 1,13,13,13,13,13, 1,18,18,18,18,18,18,18, 5],
            [ 1, 1, 1, 1, 1,17,17,17,17, 1,12,12,12,12, 1,24,26,26,26,26,24, 1,13,13,13,13, 1,18,18,18,18, 1, 1, 1, 1, 1],
            [ 8, 8, 8, 8, 8, 1,17,17,17, 1,12,12,12,12, 1,24,26,26,26,26,24, 1,13,13,13,13, 1,18,18,18, 1,14,14,14,14,14],
            [28,28,28,28, 8, 1,17,17,17, 1,12,12,12,12, 1,24,26,26,26,26,24, 1,13,13,13,13, 1,18,18,18, 1,14,30,30,30,30],
            [20,20,20,28, 8, 1,17,17,17, 1,12,12,12,12, 1,24,26,26,26,26,24, 1,13,13,13,13, 1,18,18,18, 1,14,30,22,22,22],
            [ 1, 1,20,28, 8, 1,17,17,17, 1,12,12,12,12, 1,24,26,26,26,26,24, 1,13,13,13,13, 1,18,18,18, 1,14,30,22, 1, 1],
            [ 4, 1,20,28, 8, 1, 4, 4, 4, 1,12,12,12,12, 1,24,26,26,26,26,24, 1,13,13,13,13, 1, 5, 5, 5, 1,14,30,22, 1, 5]
         ]
        //@formatter:on
    });
};